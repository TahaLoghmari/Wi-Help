services:
  api:
    depends_on:
      db:
        condition: service_healthy
      seq:
        condition: service_started
    build:
      context: ./backend
      target: development
    ports:
      - 5000:8080
    env_file:
      - .env
    volumes:
      - ./backend:/app:cached
      - /app/backend.Host/bin
      - /app/backend.Host/obj
    stdin_open: true
    tty: true
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16-alpine
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_NOAUTHENTICATION=true
    ports:
      - 5341:80
    volumes:
      - seq-data:/data

volumes:
  db-data:
  seq-data:
