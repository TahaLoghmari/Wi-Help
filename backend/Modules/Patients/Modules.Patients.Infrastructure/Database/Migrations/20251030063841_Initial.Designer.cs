// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.Patients.Infrastructure.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Modules.Patients.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PatientsDbContext))]
    [Migration("20251030063841_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("patients")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Modules.Patients.Domain.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_patients");

                    b.ToTable("patients", "patients");
                });

            modelBuilder.Entity("Modules.Patients.Domain.Entities.Patient", b =>
                {
                    b.OwnsOne("Modules.Common.Features.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("address_city");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("address_country");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("address_postal_code");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("address_street");

                            b1.HasKey("PatientId");

                            b1.ToTable("patients", "patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId")
                                .HasConstraintName("fk_patients_patients_id");
                        });

                    b.OwnsOne("Modules.Common.Features.ValueObjects.EmergencyContact", "EmergencyContact", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("emergency_contact_full_name");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("emergency_contact_phone_number");

                            b1.Property<string>("Relationship")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("emergency_contact_relationship");

                            b1.HasKey("PatientId");

                            b1.ToTable("patients", "patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId")
                                .HasConstraintName("fk_patients_patients_id");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("EmergencyContact");
                });
#pragma warning restore 612, 618
        }
    }
}
